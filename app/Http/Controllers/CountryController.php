<?php

namespace App\Http\Controllers;

use Aloha\Twilio\Twilio;
use Twilio\Rest\Client;
use App\Mail\RegistrationConfirmation;
use App\Models\PhoneBook;
use App\Models\User;
use App\Models\UserCountry;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Mail;


class CountryController extends Controller
{
    public $emojiToCode = [
        'ğŸ‡§ğŸ‡³' => 'BN',
        'ğŸ‡µğŸ‡¸' => 'PS',
        'ğŸ‡§ğŸ‡§' => 'BB',
        'ğŸ‡·ğŸ‡º' => 'RU',
        'ğŸ‡³ğŸ‡¨' => 'NC',
        'ğŸ‡¹ğŸ‡·' => 'TR',
        'ğŸ‡¨ğŸ‡³' => 'CN',
        'ğŸ‡©ğŸ‡°' => 'DK',
        'ğŸ‡­ğŸ‡·' => 'HR',
        'ğŸ‡¨ğŸ‡¦' => 'CA',
        'ğŸ‡¸ğŸ‡¾' => 'SY',
        'ğŸ‡·ğŸ‡¼' => 'RW',
        'ğŸ‡²ğŸ‡·' => 'MR',
        'ğŸ‡µğŸ‡·' => 'PR',
        'ğŸ‡³ğŸ‡®' => 'NI',
        'ğŸ‡¨ğŸ‡¬' => 'CG',
        'ğŸ‡®ğŸ‡¹' => 'IT',
        'ğŸ‡¸ğŸ‡´' => 'SO',
        'ğŸ‡¬ğŸ‡¾' => 'GY',
        'ğŸ‡µğŸ‡¾' => 'PY',
        'ğŸ‡¹ğŸ‡¯' => 'TJ',
        'ğŸ‡®ğŸ‡³' => 'IN',
        'ğŸ‡²ğŸ‡²' => 'MM',
        'ğŸ‡¶ğŸ‡¦' => 'QA',
        'ğŸ‡«ğŸ‡²' => 'FM',
        'ğŸ‡­ğŸ‡³' => 'HN',
        'ğŸ‡ªğŸ‡·' => 'ER',
        'ğŸ‡¸ğŸ‡¬' => 'SG',
        'ğŸ‡³ğŸ‡ª' => 'NE',
        'ğŸ‡­ğŸ‡º' => 'HU',
        'ğŸ‡²ğŸ‡«' => 'MF',
        'ğŸ‡³ğŸ‡·' => 'NR',
        'ğŸ‡²ğŸ‡ª' => 'ME',
        'ğŸ‡¿ğŸ‡¼' => 'ZW',
        'ğŸ‡­ğŸ‡°' => 'HK',
        'ğŸ‡«ğŸ‡¯' => 'FJ',
        'ğŸ‡§ğŸ‡¸' => 'BS',
        'ğŸ‡§ğŸ‡´' => 'BO',
        'ğŸ‡¨ğŸ‡­' => 'CH',
        'ğŸ‡¸ğŸ‡¿' => 'SZ',
        'ğŸ‡»ğŸ‡¦' => 'VA',
        'ğŸ‡¸ğŸ‡³' => 'SN',
        'ğŸ‡ºğŸ‡¦' => 'UA',
        'ğŸ‡¹ğŸ‡¨' => 'TC',
        'ğŸ‡¨ğŸ‡»' => 'CV',
        'ğŸ‡§ğŸ‡±' => 'BL',
        'ğŸ‡¦ğŸ‡«' => 'AF',
        'ğŸ‡§ğŸ‡¬' => 'BG',
        'ğŸ‡¸ğŸ‡¸' => 'SS',
        'ğŸ‡¸ğŸ‡­' => 'SH',
        'ğŸ‡µğŸ‡³' => 'PN',
        'ğŸ‡¨ğŸ‡º' => 'CU',
        'ğŸ‡±ğŸ‡¾' => 'LY',
        'ğŸ‡¯ğŸ‡µ' => 'JP',
        'ğŸ‡¹ğŸ‡¹' => 'TT',
        'ğŸ‡®ğŸ‡²' => 'IM',
        'ğŸ‡¯ğŸ‡ª' => 'JE',
        'ğŸ‡µğŸ‡¼' => 'PW',
        'ğŸ‡¸ğŸ‡¯' => 'SJ',
        'ğŸ‡²ğŸ‡¬' => 'MG',
        'ğŸ‡³ğŸ‡±' => 'NL',
        'ğŸ‡¬ğŸ‡¸' => 'GS',
        'ğŸ‡¦ğŸ‡ª' => 'AE',
        'ğŸ‡¨ğŸ‡«' => 'CF',
        'ğŸ‡¸ğŸ‡°' => 'SK',
        'ğŸ‡©ğŸ‡´' => 'DO',
        'ğŸ‡²ğŸ‡½' => 'MX',
        'ğŸ‡µğŸ‡«' => 'PF',
        'ğŸ‡©ğŸ‡¯' => 'DJ',
        'ğŸ‡²ğŸ‡¿' => 'MZ',
        'ğŸ‡¯ğŸ‡´' => 'JO',
        'ğŸ‡ªğŸ‡¹' => 'ET',
        'ğŸ‡¬ğŸ‡¬' => 'GG',
        'ğŸ‡§ğŸ‡©' => 'BD',
        'ğŸ‡µğŸ‡±' => 'PL',
        'ğŸ‡©ğŸ‡ª' => 'DE',
        'ğŸ‡±ğŸ‡·' => 'LR',
        'ğŸ‡¬ğŸ‡²' => 'GM',
        'ğŸ‡¬ğŸ‡§' => 'GB',
        'ğŸ‡±ğŸ‡»' => 'LV',
        'ğŸ‡ªğŸ‡¸' => 'ES',
        'ğŸ‡©ğŸ‡¿' => 'DZ',
        'ğŸ‡§ğŸ‡¾' => 'BY',
        'ğŸ‡«ğŸ‡®' => 'FI',
        'ğŸ‡¦ğŸ‡¿' => 'AZ',
        'ğŸ‡¬ğŸ‡µ' => 'GP',
        'ğŸ‡»ğŸ‡ª' => 'VE',
        'ğŸ‡¹ğŸ‡«' => 'TF',
        'ğŸ‡¬ğŸ‡¦' => 'GA',
        'ğŸ‡¹ğŸ‡¬' => 'TG',
        'ğŸ‡¦ğŸ‡¸' => 'AS',
        'ğŸ‡»ğŸ‡®' => 'VI',
        'ğŸ‡±ğŸ‡°' => 'LK',
        'ğŸ‡¦ğŸ‡¹' => 'AT',
        'ğŸ‡°ğŸ‡·' => 'KR',
        'ğŸ‡¬ğŸ‡¹' => 'GT',
        'ğŸ‡®ğŸ‡±' => 'IL',
        'ğŸ‡¼ğŸ‡¸' => 'WS',
        'ğŸ‡²ğŸ‡¸' => 'MS',
        'ğŸ‡²ğŸ‡µ' => 'MP',
        'ğŸ‡¨ğŸ‡¨' => 'CC',
        'ğŸ‡¹ğŸ‡³' => 'TN',
        'ğŸ‡±ğŸ‡¸' => 'LS',
        'ğŸ‡·ğŸ‡¸' => 'RS',
        'ğŸ‡°ğŸ‡¾' => 'KY',
        'ğŸ‡§ğŸ‡¿' => 'BZ',
        'ğŸ‡¨ğŸ‡¾' => 'CY',
        'ğŸ‡¬ğŸ‡±' => 'GL',
        'ğŸ‡·ğŸ‡´' => 'RO',
        'ğŸ‡­ğŸ‡¹' => 'HT',
        'ğŸ‡¬ğŸ‡©' => 'GD',
        'ğŸ‡²ğŸ‡¼' => 'MW',
        'ğŸ‡µğŸ‡¹' => 'PT',
        'ğŸ‡¨ğŸ‡¼' => 'CW',
        'ğŸ‡§ğŸ‡·' => 'BR',
        'ğŸ‡¹ğŸ‡­' => 'TH',
        'ğŸ‡²ğŸ‡±' => 'ML',
        'ğŸ‡¹ğŸ‡±' => 'TL',
        'ğŸ‡ªğŸ‡¨' => 'EC',
        'ğŸ‡²ğŸ‡³' => 'MN',
        'ğŸ‡§ğŸ‡²' => 'BM',
        'ğŸ‡¦ğŸ‡º' => 'AU',
        'ğŸ‡®ğŸ‡´' => 'IO',
        'ğŸ‡«ğŸ‡°' => 'FK',
        'ğŸ‡¼ğŸ‡«' => 'WF',
        'ğŸ‡¸ğŸ‡²' => 'SM',
        'ğŸ‡®ğŸ‡¸' => 'IS',
        'ğŸ‡¦ğŸ‡´' => 'AO',
        'ğŸ‡¬ğŸ‡·' => 'GR',
        'ğŸ‡±ğŸ‡¹' => 'LT',
        'ğŸ‡µğŸ‡²' => 'PM',
        'ğŸ‡¬ğŸ‡®' => 'GI',
        'ğŸ‡µğŸ‡¬' => 'PG',
        'ğŸ‡ºğŸ‡¿' => 'UZ',
        'ğŸ‡¹ğŸ‡²' => 'TM',
        'ğŸ‡¸ğŸ‡½' => 'SX',
        'ğŸ‡¾ğŸ‡ª' => 'YE',
        'ğŸ‡³ğŸ‡¬' => 'NG',
        'ğŸ‡¸ğŸ‡±' => 'SL',
        'ğŸ‡§ğŸ‡¼' => 'BW',
        'ğŸ‡¬ğŸ‡ª' => 'GE',
        'ğŸ‡§ğŸ‡¯' => 'BJ',
        'ğŸ‡¦ğŸ‡½' => 'AX',
        'ğŸ‡¨ğŸ‡®' => 'CI',
        'ğŸ‡ªğŸ‡­' => 'EH',
        'ğŸ‡°ğŸ‡µ' => 'KP',
        'ğŸ‡²ğŸ‡´' => 'MO',
        'ğŸ‡¨ğŸ‡´' => 'CO',
        'ğŸ‡¸ğŸ‡¹' => 'ST',
        'ğŸ‡ªğŸ‡ª' => 'EE',
        'ğŸ‡¾ğŸ‡¹' => 'YT',
        'ğŸ‡²ğŸ‡¶' => 'MQ',
        'ğŸ‡¹ğŸ‡¿' => 'TZ',
        'ğŸ‡©ğŸ‡²' => 'DM',
        'ğŸ‡¯ğŸ‡²' => 'JM',
        'ğŸ‡¸ğŸ‡®' => 'SI',
        'ğŸ‡¿ğŸ‡¦' => 'ZA',
        'ğŸ‡¬ğŸ‡¶' => 'GQ',
        'ğŸ‡¬ğŸ‡³' => 'GN',
        'ğŸ‡ºğŸ‡¬' => 'UG',
        'ğŸ‡°ğŸ‡­' => 'KH',
        'ğŸ‡¸ğŸ‡»' => 'SV',
        'ğŸ‡§ğŸ‡ª' => 'BE',
        'ğŸ‡»ğŸ‡¬' => 'VG',
        'ğŸ‡ºğŸ‡¸' => 'US',
        'ğŸ‡°ğŸ‡²' => 'KM',
        'ğŸ‡«ğŸ‡´' => 'FO',
        'ğŸ‡§ğŸ‡¶' => 'BQ',
        'ğŸ‡¨ğŸ‡·' => 'CR',
        'ğŸ‡³ğŸ‡«' => 'NF',
        'ğŸ‡°ğŸ‡ª' => 'KE',
        'ğŸ‡»ğŸ‡º' => 'VU',
        'ğŸ‡¸ğŸ‡·' => 'SR',
        'ğŸ‡²ğŸ‡©' => 'MD',
        'ğŸ‡¬ğŸ‡­' => 'GH',
        'ğŸ‡²ğŸ‡»' => 'MV',
        'ğŸ‡ªğŸ‡¬' => 'EG',
        'ğŸ‡®ğŸ‡ª' => 'IE',
        'ğŸ‡½ğŸ‡°' => 'XK',
        'ğŸ‡¨ğŸ‡±' => 'CL',
        'ğŸ‡°ğŸ‡®' => 'KI',
        'ğŸ‡²ğŸ‡¨' => 'MC',
        'ğŸ‡®ğŸ‡¶' => 'IQ',
        'ğŸ‡§ğŸ‡«' => 'BF',
        'ğŸ‡³ğŸ‡µ' => 'NP',
        'ğŸ‡´ğŸ‡²' => 'OM',
        'ğŸ‡°ğŸ‡¼' => 'KW',
        'ğŸ‡µğŸ‡­' => 'PH',
        'ğŸ‡°ğŸ‡³' => 'KN',
        'ğŸ‡°ğŸ‡¬' => 'KG',
        'ğŸ‡²ğŸ‡º' => 'MU',
        'ğŸ‡¨ğŸ‡½' => 'CX',
        'ğŸ‡§ğŸ‡»' => 'BV',
        'ğŸ‡ºğŸ‡¾' => 'UY',
        'ğŸ‡®ğŸ‡·' => 'IR',
        'ğŸ‡±ğŸ‡§' => 'LB',
        'ğŸ‡¹ğŸ‡»' => 'TV',
        'ğŸ‡°ğŸ‡¿' => 'KZ',
        'ğŸ‡¨ğŸ‡°' => 'CK',
        'ğŸ‡²ğŸ‡¾' => 'MY',
        'ğŸ‡ºğŸ‡²' => 'UM',
        'ğŸ‡«ğŸ‡·' => 'FR',
        'ğŸ‡»ğŸ‡¨' => 'VC',
        'ğŸ‡³ğŸ‡º' => 'NU',
        'ğŸ‡±ğŸ‡¦' => 'LA',
        'ğŸ‡²ğŸ‡¹' => 'MT',
        'ğŸ‡¨ğŸ‡©' => 'CD',
        'ğŸ‡¦ğŸ‡¼' => 'AW',
        'ğŸ‡µğŸ‡¦' => 'PA',
        'ğŸ‡¹ğŸ‡©' => 'TD',
        'ğŸ‡¸ğŸ‡ª' => 'SE',
        'ğŸ‡®ğŸ‡©' => 'ID',
        'ğŸ‡³ğŸ‡´' => 'NO',
        'ğŸ‡±ğŸ‡¨' => 'LC',
        'ğŸ‡¹ğŸ‡°' => 'TK',
        'ğŸ‡¦ğŸ‡¬' => 'AG',
        'ğŸ‡±ğŸ‡®' => 'LI',
        'ğŸ‡¸ğŸ‡¨' => 'SC',
        'ğŸ‡³ğŸ‡¦' => 'NA',
        'ğŸ‡·ğŸ‡ª' => 'RE',
        'ğŸ‡§ğŸ‡­' => 'BH',
        'ğŸ‡¬ğŸ‡«' => 'GF',
        'ğŸ‡¦ğŸ‡·' => 'AR',
        'ğŸ‡²ğŸ‡¦' => 'MA',
        'ğŸ‡¹ğŸ‡¼' => 'TW',
        'ğŸ‡¹ğŸ‡´' => 'TO',
        'ğŸ‡§ğŸ‡¦' => 'BA',
        'ğŸ‡¦ğŸ‡©' => 'AD',
        'ğŸ‡µğŸ‡°' => 'PK',
        'ğŸ‡¿ğŸ‡²' => 'ZM',
        'ğŸ‡¬ğŸ‡¼' => 'GW',
        'ğŸ‡¬ğŸ‡º' => 'GU',
        'ğŸ‡¸ğŸ‡¦' => 'SA',
        'ğŸ‡¨ğŸ‡¿' => 'CZ',
        'ğŸ‡¦ğŸ‡²' => 'AM',
        'ğŸ‡»ğŸ‡³' => 'VN',
        'ğŸ‡¦ğŸ‡±' => 'AL',
        'ğŸ‡µğŸ‡ª' => 'PE',
        'ğŸ‡¸ğŸ‡©' => 'SD',
        'ğŸ‡¸ğŸ‡§' => 'SB',
        'ğŸ‡¨ğŸ‡²' => 'CM',
        'ğŸ‡±ğŸ‡º' => 'LU',
        'ğŸ‡¦ğŸ‡®' => 'AI',
        'ğŸ‡²ğŸ‡­' => 'MH',
        'ğŸ‡²ğŸ‡°' => 'MK',
        'ğŸ‡§ğŸ‡¹' => 'BT',
        'ğŸ‡§ğŸ‡®' => 'BI',
        'ğŸ‡³ğŸ‡¿' => 'NZ'
    ];

    public function getCountries(): \Illuminate\Http\JsonResponse
    {
        $countriesJson = file_get_contents(public_path('data/countries.json'));

        $countries = json_decode($countriesJson, true);

        foreach ($countries as &$country) {
            $flag = $country['flag'];
            if (array_key_exists($flag, $this->emojiToCode)) {
                $country['flag'] = $this->emojiToCode[$flag];
            } else {
                $country['flag'] = 'BN';
            }
        }

        return response()->json($countries);
    }

    public function registerUser(Request $request): string
    {
        DB::beginTransaction();

        try {
            $user = User::create([
                'name' => $request->fullName,
                'email' => $request->email,
            ]);

            if (!empty($request->selectedCountry)) {
                UserCountry::create([
                    'user_id' => $user->id,
                    'country' => $request->selectedCountry,
                ]);
            }

            if (!empty($request->phoneNumber)) {
                PhoneBook::create([
                    'user_id' => $user->id,
                    'phone_number' => $request->phoneNumber,
                ]);
            }

            DB::commit();

            // Send email and SMS to the user (implementation not provided here)
            Mail::to($request->email)->send(new RegistrationConfirmation($user));
            $message = "Congratulation! Your registration confirmed!";


            $account_sid ="ACa600d87e517168502c90908bdb0254a0";
            $auth_token = "f64b72b5192f80553387ed64208d15ca";
            $twilio_number = "+15169906171";

            $client = new Client($account_sid, $auth_token);
            $client->messages->create(
                $request->phoneNumber,
                array(
                    'from' => $twilio_number,
                    'body' => $message
                )
            );


            // Return a success message
            return 'OK';
        } catch (\Exception $e) {
            // If an error occurs, rollback the transaction and return an error message
            DB::rollBack();
            return 'Error here: ' . $e->getMessage();
        }
    }

    public function getAllUsers()
    {
        return User::with(['userCountry', 'phoneBook'])->get();
    }

}
